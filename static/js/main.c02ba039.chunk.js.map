{"version":3,"sources":["components/EditableInput.js","helpers/salary.js","components/ReadOnlyInput.js","helpers/formatHelpers.js","components/ColorBar.js","App.js","index.js","components/styles.module.css"],"names":["EditableInput","handleInputChange","event","newSalary","target","value","props","onInputChange","this","inputSalary","label","id","className","css","input","htmlFor","type","onChange","style","fontWeight","Component","INSS_TABLE","minValue","maxValue","difference","discountPercentage","discountValue","round","toFixed","calculateSalaryFrom","fullSalary","baseINSS","Number","discountINSS","i","length","currentItem","calculateDiscountINSS","baseIRPF","discountIRPF","calculateDiscountIRPF","netSalary","ReadOnlyInput","color","readOnly","percentage","grossSalary","discount","localCurrency","toLocaleString","currency","ColorBar","marginTop","width","height","backgroundColor","App","setState","getDataFromSalary","data","state","percentageOf","discINSS","discIRPF","title","flexRow","display","flexDirection","alignItems","justifyContent","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c02ba039.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport css from \"./styles.module.css\";\n\nexport default class EditableInput extends Component {\n  handleInputChange = (event) => {\n    const newSalary = event.target.value;\n    this.props.onInputChange(newSalary);\n  };\n  render() {\n    const { inputSalary, label, id } = this.props;\n    return (\n      <div className={css.input}>\n        <label className=\"active\" htmlFor={id}>\n          {label}\n        </label>\n        <input\n          type=\"text\"\n          id={id}\n          onChange={this.handleInputChange}\n          style={{ fontWeight: \"bold\" }}\n          value={inputSalary}\n        />{\" \"}\n      </div>\n    );\n  }\n}\n","// Fonte: https://www.todacarreira.com/calculo-salario-liquido/\r\n\r\nconst INSS_TABLE = [\r\n  {\r\n    id: 1,\r\n    minValue: 0,\r\n    maxValue: 1045,\r\n    difference: 1045 - 0,\r\n    discountPercentage: 0.075,\r\n    discountValue: -1,\r\n  },\r\n  {\r\n    id: 2,\r\n    minValue: 1045.01,\r\n    maxValue: 2089.6,\r\n    difference: 2089.6 - 1045,\r\n    discountPercentage: 0.09,\r\n  },\r\n  {\r\n    id: 3,\r\n    minValue: 2089.61,\r\n    maxValue: 3134.4,\r\n    difference: 3134.4 - 2089.6,\r\n    discountPercentage: 0.12,\r\n  },\r\n  {\r\n    id: 4,\r\n    minValue: 3134.41,\r\n    maxValue: 6101.06,\r\n    difference: 6101.06 - 3134.4,\r\n    discountPercentage: 0.14,\r\n  },\r\n];\r\n\r\nfunction round(value) {\r\n  return +value.toFixed(2);\r\n}\r\n\r\nfunction calculateDiscountINSS(baseINSS) {\r\n  let discountINSS = 0;\r\n\r\n  if (baseINSS > 6101.07) {\r\n    return 713.1;\r\n  }\r\n\r\n  for (var i = 0; i < INSS_TABLE.length; i++) {\r\n    var currentItem = INSS_TABLE[i];\r\n    let discountValue = 0;\r\n\r\n    if (baseINSS > currentItem.maxValue) {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round(currentItem.difference * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n    } else {\r\n      // prettier-ignore\r\n      discountValue = \r\n        round((baseINSS - currentItem.minValue) * currentItem.discountPercentage);\r\n\r\n      discountINSS += discountValue;\r\n      break;\r\n    }\r\n  }\r\n\r\n  discountINSS = round(discountINSS);\r\n\r\n  return discountINSS;\r\n}\r\n\r\nfunction calculateDiscountIRPF(baseIRPF) {\r\n  let discountIRPF =\r\n    baseIRPF < 1903.98\r\n      ? 0\r\n      : baseIRPF < 2826.65\r\n      ? round(baseIRPF * 0.075) - 142.8\r\n      : baseIRPF < 3751.05\r\n      ? round(baseIRPF * 0.15) - 354.8\r\n      : baseIRPF < 4664.68\r\n      ? round(baseIRPF * 0.225) - 636.13\r\n      : round(baseIRPF * 0.275) - 869.36;\r\n\r\n  discountIRPF = round(discountIRPF);\r\n\r\n  return discountIRPF;\r\n}\r\n\r\nfunction calculateSalaryFrom(fullSalary) {\r\n  // eslint-disable-next-line no-new-wrappers\r\n  const baseINSS = new Number(fullSalary);\r\n  const discountINSS = calculateDiscountINSS(baseINSS);\r\n\r\n  const baseIRPF = baseINSS - discountINSS;\r\n  const discountIRPF = calculateDiscountIRPF(baseIRPF);\r\n\r\n  const netSalary = baseINSS - discountINSS - discountIRPF;\r\n\r\n  return {\r\n    baseINSS,\r\n    discountINSS,\r\n    baseIRPF,\r\n    discountIRPF,\r\n    netSalary,\r\n  };\r\n}\r\n\r\nexport { calculateSalaryFrom };\r\n","import React, { Component } from \"react\";\nimport css from \"./styles.module.css\";\n\nexport default class ReadOnlyInput extends Component {\n  render() {\n    const { value, label, id, color } = this.props;\n    return (\n      <div className={css.input}>\n        <label htmlFor={id}>{label}</label>\n        <input\n          type=\"text\"\n          id={id}\n          value={value}\n          style={{ fontWeight: \"bold\", color: color }}\n          readOnly\n        />{\" \"}\n      </div>\n    );\n  }\n}\n","function percentage(grossSalary, discount) {\n  return (100 * discount) / grossSalary;\n}\n\nfunction localCurrency(value) {\n  return value.toLocaleString(\"pt-br\", { style: \"currency\", currency: \"BRL\" });\n}\n\nexport { percentage, localCurrency };\n","import React, { Component } from \"react\";\nimport css from \"./styles.module.css\";\n\nexport default class ColorBar extends Component {\n  render() {\n    const { value, color = \"black\" } = this.props;\n\n    return (\n      <div\n        style={{\n          marginTop: \"40px\",\n          width: value + \"%\",\n          height: \"20px\",\n          backgroundColor: color,\n        }}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport EditableInput from \"./components/EditableInput\";\nimport { calculateSalaryFrom } from \"./helpers/salary.js\";\nimport ReadOnlyInput from \"./components/ReadOnlyInput\";\nimport { percentage, localCurrency } from \"./helpers/formatHelpers.js\";\nimport css from \"./components/styles.module.css\";\nimport ColorBar from \"./components/ColorBar\";\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      grossSalary: \"\",\n      baseINSS: 0,\n      discountINSS: 0,\n      baseIRPF: 0,\n      discountIRPF: 0,\n      netSalary: 0,\n    };\n  }\n  componentDidMount() {\n    this.getDataFromSalary(1000);\n  }\n\n  handleInputChange = (inputSalary) => {\n    this.setState({ grossSalary: inputSalary });\n    this.getDataFromSalary(inputSalary);\n  };\n\n  getDataFromSalary = (grossSalary) => {\n    let data = calculateSalaryFrom(grossSalary);\n    const { baseINSS, discountINSS, baseIRPF, discountIRPF, netSalary } = data;\n\n    this.setState({\n      grossSalary,\n      baseINSS,\n      discountINSS,\n      baseIRPF,\n      discountIRPF,\n      netSalary,\n    });\n  };\n\n  render() {\n    const {\n      grossSalary,\n      baseINSS,\n      discountINSS,\n      baseIRPF,\n      discountIRPF,\n      netSalary,\n    } = this.state;\n\n    const percentageOf = {\n      discINSS: percentage(grossSalary, discountINSS),\n      discIRPF: percentage(grossSalary, discountIRPF),\n      netSalary: percentage(grossSalary, netSalary),\n    };\n\n    return (\n      <div>\n        <h1 className={css.title}>React Salário</h1>\n        <div className={css.flexRow}>\n          <div className={\"row\"}>\n            <div className={\"col l12 s12\"}>\n              <EditableInput\n                id={\"grossSalary\"}\n                label={\"Salário Bruto\"}\n                inputSalary={grossSalary}\n                onInputChange={this.handleInputChange}\n              />\n            </div>\n            <div className=\"col l3 s6\">\n              <ReadOnlyInput\n                id={\"baseINSS\"}\n                label={\"Base INSS\"}\n                value={`${localCurrency(baseINSS)}`}\n              />\n            </div>\n\n            <div className=\"col l3 s6\">\n              <ReadOnlyInput\n                id={\"discountINSS\"}\n                color={\"#e67e22\"}\n                label={\"Desconto INSS\"}\n                value={`${localCurrency(\n                  discountINSS\n                )} (${percentageOf.discINSS.toFixed(2)}%) `}\n              />\n            </div>\n            <div className=\"col l3 s6\">\n              <ReadOnlyInput\n                id={\"baseIRPF\"}\n                label={\"Base IRPF\"}\n                value={localCurrency(baseIRPF)}\n              />\n            </div>\n            <div className=\"col l3 s6\">\n              <ReadOnlyInput\n                id={\"discountIRPF\"}\n                color={\"#c0392b\"}\n                label={\"Desconto IRPF\"}\n                value={`${localCurrency(\n                  discountIRPF\n                )} (${percentageOf.discIRPF.toFixed(2)}%) `}\n              />\n            </div>\n            <div className=\"col l3 s6\">\n              <ReadOnlyInput\n                id={\"netSalary\"}\n                color={\"#16a085\"}\n                label={\"Salário Líquido\"}\n                value={`${localCurrency(\n                  netSalary\n                )} (${percentageOf.netSalary.toFixed(2)}%) `}\n              />\n            </div>\n            <div\n              className=\"col l12 s12 \"\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n              }}\n            >\n              <ColorBar value={percentageOf.discINSS} color=\"#e67e22\" />\n              <ColorBar value={percentageOf.discIRPF} color=\"#c0392b\" />\n              <ColorBar value={percentageOf.netSalary} color=\"#16a085\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexRow\":\"styles_flexRow__1JbWI\",\"input\":\"styles_input__3k8u6\",\"title\":\"styles_title__A5cXe\",\"colorBar\":\"styles_colorBar__2ujzK\"};"],"sourceRoot":""}